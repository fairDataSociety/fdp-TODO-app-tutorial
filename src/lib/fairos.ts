export const api = {
  user: {
    "v1/user/isloggedin": {
      topic: "user",
      method: "get",
      endpoint: "Is user logged-in",
      path: "v1/user/isloggedin",
    },
    "v1/user/logout": {
      topic: "user",
      method: "post",
      endpoint: "Logout",
      path: "v1/user/logout",
    },
    "v1/user/stat": {
      topic: "user",
      method: "get",
      endpoint: "User stat",
      path: "v1/user/stat",
    },
    "v2/user/delete": {
      topic: "user",
      method: "del",
      endpoint: "Delete user for ENS based authentication",
      path: "v2/user/delete",
    },
    "v2/user/login": {
      topic: "user",
      method: "post",
      endpoint: "Login User",
      path: "v2/user/login",
    },
    "v2/user/present": {
      topic: "user",
      method: "get",
      endpoint: "Check if user is present",
      path: "v2/user/present",
    },
    "v2/user/signup": {
      topic: "user",
      method: "post",
      endpoint: "Register New User",
      path: "v2/user/signup",
    },
  },
  pod: {
    "v1/pod/close": {
      topic: "pod",
      method: "post",
      endpoint: "Close pod",
      path: "v1/pod/close",
    },
    "v1/pod/delete": {
      topic: "pod",
      method: "del",
      endpoint: "Delete pod",
      path: "v1/pod/delete",
    },
    "v1/pod/ls": {
      topic: "pod",
      method: "get",
      endpoint: "List pods",
      path: "v1/pod/ls",
    },
    "v1/pod/new": {
      topic: "pod",
      method: "post",
      endpoint: "Create pod",
      path: "v1/pod/new",
    },
    "v1/pod/open": {
      topic: "pod",
      method: "post",
      endpoint: "Open pod",
      path: "v1/pod/open",
    },
    "v1/pod/open-async": {
      topic: "pod",
      method: "post",
      endpoint: "Open pod",
      path: "v1/pod/open-async",
    },
    "v1/pod/present": {
      topic: "pod",
      method: "get",
      endpoint: "Is pod present",
      path: "v1/pod/present",
    },
    "v1/pod/receive": {
      topic: "pod",
      method: "get",
      endpoint: "Receive shared pod",
      path: "v1/pod/receive",
    },
    "v1/pod/receiveinfo": {
      topic: "pod",
      method: "get",
      endpoint: "Receive shared pod info",
      path: "v1/pod/receiveinfo",
    },
    "v1/pod/share": {
      topic: "pod",
      method: "post",
      endpoint: "Share pod",
      path: "v1/pod/share",
    },
    "v1/pod/stat": {
      topic: "pod",
      method: "get",
      endpoint: "Stats for pod",
      path: "v1/pod/stat",
    },
    "v1/pod/sync": {
      topic: "pod",
      method: "post",
      endpoint: "Sync pod",
      path: "v1/pod/sync",
    },
  },
  dir: {
    "v1/dir/ls": {
      topic: "dir",
      method: "get",
      endpoint: "List directory",
      path: "v1/dir/ls",
    },
    "v1/dir/mkdir": {
      topic: "dir",
      method: "post",
      endpoint: "Create directory",
      path: "v1/dir/mkdir",
    },
    "v1/dir/present": {
      topic: "dir",
      method: "get",
      endpoint: "Is directory present",
      path: "v1/dir/present",
    },
    "v1/dir/rename": {
      topic: "dir",
      method: "post",
      endpoint: "Rename directory",
      path: "v1/dir/rename",
    },
    "v1/dir/rmdir": {
      topic: "dir",
      method: "del",
      endpoint: "Remove directory",
      path: "v1/dir/rmdir",
    },
    "v1/dir/stat": {
      topic: "dir",
      method: "get",
      endpoint: "Directory stat",
      path: "v1/dir/stat",
    },
  },
  file: {
    "v1/file/delete": {
      topic: "file",
      method: "del",
      endpoint: "Delete a file",
      path: "v1/file/delete",
    },
    "v1/file/download": {
      topic: "file",
      method: "post",
      endpoint: "Download a file",
      path: "v1/file/download",
    },
    "v1/file/receive": {
      topic: "file",
      method: "get",
      endpoint: "Receive a file",
      path: "v1/file/receive",
    },
    "v1/file/receiveinfo": {
      topic: "file",
      method: "get",
      endpoint: "Receive a file info",
      path: "v1/file/receiveinfo",
    },
    "v1/file/rename": {
      topic: "file",
      method: "post",
      endpoint: "Info of a file",
      path: "v1/file/rename",
    },
    "v1/file/share": {
      topic: "file",
      method: "post",
      endpoint: "Share a file",
      path: "v1/file/share",
    },
    "v1/file/stat": {
      topic: "file",
      method: "get",
      endpoint: "Info of a file",
      path: "v1/file/stat",
    },
    "v1/file/upload": {
      topic: "file",
      method: "post",
      endpoint: "Upload a file",
      path: "v1/file/upload",
    },
  },
  kv: {
    "v1/kv/count": {
      topic: "kv",
      method: "post",
      endpoint: "Count rows in a key value table",
      path: "v1/kv/count",
    },
    "v1/kv/delete": {
      topic: "kv",
      method: "del",
      endpoint: "Delete a key value table",
      path: "v1/kv/delete",
    },
    "v1/kv/entry/del": {
      topic: "kv",
      method: "del",
      endpoint: "Delete key-value from the kv table",
      path: "v1/kv/entry/del",
    },
    "v1/kv/entry/get": {
      topic: "kv",
      method: "get",
      endpoint: "get value from the kv table",
      path: "v1/kv/entry/get",
    },
    "v1/kv/entry/get-data": {
      topic: "kv",
      method: "get",
      endpoint: "get value from the kv table",
      path: "v1/kv/entry/get-data",
    },
    "v1/kv/entry/present": {
      topic: "kv",
      method: "get",
      endpoint: "Check if a value exists in the kv table",
      path: "v1/kv/entry/present",
    },
    "v1/kv/entry/put": {
      topic: "kv",
      method: "post",
      endpoint: "put key and value in the kv table",
      path: "v1/kv/entry/put",
    },
    "v1/kv/export": {
      topic: "kv",
      method: "post",
      endpoint: "Export from a particular key with the given prefix",
      path: "v1/kv/export",
    },
    "v1/kv/loadcsv": {
      topic: "kv",
      method: "post",
      endpoint: "Upload a csv file in kv table",
      path: "v1/kv/loadcsv",
    },
    "v1/kv/ls": {
      topic: "kv",
      method: "get",
      endpoint: "List all key value tables",
      path: "v1/kv/ls",
    },
    "v1/kv/new": {
      topic: "kv",
      method: "post",
      endpoint: "Create a key value table",
      path: "v1/kv/new",
    },
    "v1/kv/open": {
      topic: "kv",
      method: "post",
      endpoint: "Open a key value table",
      path: "v1/kv/open",
    },
    "v1/kv/seek": {
      topic: "kv",
      method: "post",
      endpoint: "Seek in kv table",
      path: "v1/kv/seek",
    },
    "v1/kv/seek/next": {
      topic: "kv",
      method: "post",
      endpoint: "Get next value from last seek in kv table",
      path: "v1/kv/seek/next",
    },
  },
  doc: {
    "v1/doc/count": {
      topic: "doc",
      method: "post",
      endpoint: "Count number of documents in a table",
      path: "v1/doc/count",
    },
    "v1/doc/delete": {
      topic: "doc",
      method: "del",
      endpoint: "Delete a doc table",
      path: "v1/doc/delete",
    },
    "v1/doc/entry/delete": {
      topic: "doc",
      method: "del",
      endpoint: "Delete a document from a document datastore",
      path: "v1/doc/entry/delete",
    },
    "v1/doc/entry/get": {
      topic: "doc",
      method: "get",
      endpoint: "Get a document from a document datastore",
      path: "v1/doc/entry/get",
    },
    "v1/doc/entry/put": {
      topic: "doc",
      method: "post",
      endpoint: "Add a record in document datastore",
      path: "v1/doc/entry/put",
    },
    "v1/doc/find": {
      topic: "doc",
      method: "get",
      endpoint: "Get rows from a given doc datastore",
      path: "v1/doc/find",
    },
    "v1/doc/indexjson": {
      topic: "doc",
      method: "post",
      endpoint:
        "Index a json file that is present in a pod, in to the given document database",
      path: "v1/doc/indexjson",
    },
    "v1/doc/loadjson": {
      topic: "doc",
      method: "post",
      endpoint: "Load json file from local file system",
      path: "v1/doc/loadjson",
    },
    "v1/doc/ls": {
      topic: "doc",
      method: "get",
      endpoint: "List all doc table",
      path: "v1/doc/ls",
    },
    "v1/doc/new": {
      topic: "doc",
      method: "post",
      endpoint: "Create in doc table",
      path: "v1/doc/new",
    },
    "v1/doc/open": {
      topic: "doc",
      method: "post",
      endpoint: "Open a doc table",
      path: "v1/doc/open",
    },
  },
};
